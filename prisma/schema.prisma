generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Manufacturer {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  product Product[]
  warehouse Warehouse[]
}

model Distributor {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  warehouse Warehouse[]
}

model Retailer {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  warehouse Warehouse[]
}

model Product {
  id          String   @id @default(cuid())
  name        String
  description String?
  image       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  manufacturerId String
  manufacturer   Manufacturer @relation(fields: [manufacturerId], references: [id])

  inventories Inventory[]
  transactions Transaction[]
}

model Warehouse {
  id          String   @id @default(cuid())
  name        String
  description String?
  location Location?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  manufacturerId String?
  manufacturer   Manufacturer? @relation(fields: [manufacturerId], references: [id])

  distributorId String?
  distributor   Distributor? @relation(fields: [distributorId], references: [id])

  retailerId String?
  retailer   Retailer? @relation(fields: [retailerId], references: [id])

  inventories Inventory[]
  
  outs Transaction[] @relation("FromWarehouse")
  ins Transaction[] @relation("ToWarehouse")
}

model Location {
  id        String   @id @default(cuid())
  latitude  Float
  longitude Float
  address   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  warehouseId String @unique
  warehouse Warehouse @relation(fields: [warehouseId], references: [id])
}

model Inventory {
  id          String   @id @default(cuid())
  quantity    Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  productId String
  product   Product @relation(fields: [productId], references: [id])

  warehouseId String
  warehouse   Warehouse @relation(fields: [warehouseId], references: [id])
}

model Transaction {
  id          String   @id @default(cuid())
  type        String
  quantity    Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  productId String
  product   Product @relation(fields: [productId], references: [id])

  fromWarehouseId String?
  fromWarehouse   Warehouse? @relation("FromWarehouse", fields: [fromWarehouseId], references: [id])

  toWarehouseId String?
  toWarehouse   Warehouse? @relation("ToWarehouse", fields: [toWarehouseId], references: [id])
}
